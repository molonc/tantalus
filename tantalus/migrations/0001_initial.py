# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-07-27 02:26
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalAzureBlobStorage',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Store Name')),
                ('account', models.CharField(max_length=50, verbose_name='Storage Account')),
                ('container', models.CharField(max_length=50, verbose_name='Storage Container')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical azure blob storage',
            },
        ),
        migrations.CreateModel(
            name='HistoricalBamFile',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('md5', models.CharField(max_length=50, verbose_name='MD5')),
                ('sample_id_space', models.CharField(choices=[('SA', 'Aparicio'), ('DG', 'Huntsman'), ('O', 'Other')], max_length=50, verbose_name='Sample ID Space')),
                ('sample_id', models.CharField(max_length=50, verbose_name='Sample ID')),
                ('sequencing_id', models.CharField(max_length=50, verbose_name='Sequencing ID')),
                ('reference_genome', models.CharField(choices=[('hg19', 'Human Genome 19'), ('hg18', 'Human Genome 18'), ('none', 'No Useful alignments')], max_length=50, verbose_name='Reference Genome')),
                ('aligner', models.CharField(max_length=50, verbose_name='Aligner')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical bam file',
            },
        ),
        migrations.CreateModel(
            name='HistoricalFastqFile',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('md5', models.CharField(max_length=50, verbose_name='MD5')),
                ('sample_id_space', models.CharField(choices=[('SA', 'Aparicio'), ('DG', 'Huntsman'), ('O', 'Other')], max_length=50, verbose_name='Sample ID Space')),
                ('sample_id', models.CharField(max_length=50, verbose_name='Sample ID')),
                ('sequencing_id', models.CharField(max_length=50, verbose_name='Sequencing ID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical fastq file',
            },
        ),
        migrations.CreateModel(
            name='HistoricalIndexedReads',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('index_1', models.CharField(max_length=50, verbose_name='Index 1')),
                ('index_2', models.CharField(max_length=50, verbose_name='Index 2')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical indexed reads',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSequenceFileResource',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('md5', models.CharField(max_length=50, verbose_name='MD5')),
                ('sample_id_space', models.CharField(choices=[('SA', 'Aparicio'), ('DG', 'Huntsman'), ('O', 'Other')], max_length=50, verbose_name='Sample ID Space')),
                ('sample_id', models.CharField(max_length=50, verbose_name='Sample ID')),
                ('sequencing_id', models.CharField(max_length=50, verbose_name='Sequencing ID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical sequence file resource',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSequenceLane',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('flowcell_id', models.CharField(max_length=50, verbose_name='FlowCell ID')),
                ('lane_number', models.PositiveSmallIntegerField(verbose_name='Lane Number')),
                ('sequencing_centre', models.CharField(max_length=50, verbose_name='Sequencing Centre')),
                ('library_id', models.CharField(max_length=50, verbose_name='Library ID')),
                ('library_type', models.CharField(choices=[('Exome', 'Bulk Whole Exome Sequence'), ('WGS', 'Bulk Whole Genome Sequence'), ('SC WGS', 'Single Cell Whole Genome Sequence'), ('RNA-Seq', 'Bulk RNA-Seq'), ('SC RNA-Seq', 'Single Cell RNA-Seq')], max_length=50, verbose_name='Library Type')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical sequence lane',
            },
        ),
        migrations.CreateModel(
            name='HistoricalServerBamFileInstance',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('filename', models.CharField(max_length=500, verbose_name='Storage Account')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical server bam file instance',
            },
        ),
        migrations.CreateModel(
            name='HistoricalServerFastqFileInstance',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('filename', models.CharField(max_length=500, verbose_name='Storage Account')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical server fastq file instance',
            },
        ),
        migrations.CreateModel(
            name='HistoricalServerFileInstance',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('filename', models.CharField(max_length=500, verbose_name='Storage Account')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical server file instance',
            },
        ),
        migrations.CreateModel(
            name='HistoricalServerStorage',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Store Name')),
                ('server_name', models.CharField(max_length=50, verbose_name='Server Name')),
                ('directory', models.CharField(max_length=250, verbose_name='Store Directory')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical server storage',
            },
        ),
        migrations.CreateModel(
            name='HistoricalStorage',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Store Name')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical storage',
            },
        ),
        migrations.CreateModel(
            name='IndexedReads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_1', models.CharField(max_length=50, verbose_name='Index 1')),
                ('index_2', models.CharField(max_length=50, verbose_name='Index 2')),
            ],
        ),
        migrations.CreateModel(
            name='SequenceFileResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('md5', models.CharField(max_length=50, verbose_name='MD5')),
                ('sample_id_space', models.CharField(choices=[('SA', 'Aparicio'), ('DG', 'Huntsman'), ('O', 'Other')], max_length=50, verbose_name='Sample ID Space')),
                ('sample_id', models.CharField(max_length=50, verbose_name='Sample ID')),
                ('sequencing_id', models.CharField(max_length=50, verbose_name='Sequencing ID')),
            ],
        ),
        migrations.CreateModel(
            name='SequenceLane',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flowcell_id', models.CharField(max_length=50, verbose_name='FlowCell ID')),
                ('lane_number', models.PositiveSmallIntegerField(verbose_name='Lane Number')),
                ('sequencing_centre', models.CharField(max_length=50, verbose_name='Sequencing Centre')),
                ('library_id', models.CharField(max_length=50, verbose_name='Library ID')),
                ('library_type', models.CharField(choices=[('Exome', 'Bulk Whole Exome Sequence'), ('WGS', 'Bulk Whole Genome Sequence'), ('SC WGS', 'Single Cell Whole Genome Sequence'), ('RNA-Seq', 'Bulk RNA-Seq'), ('SC RNA-Seq', 'Single Cell RNA-Seq')], max_length=50, verbose_name='Library Type')),
                ('indices', models.ManyToManyField(to='tantalus.IndexedReads', verbose_name='Indices')),
            ],
        ),
        migrations.CreateModel(
            name='ServerFileInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=500, verbose_name='Storage Account')),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Store Name')),
            ],
        ),
        migrations.CreateModel(
            name='AzureBlobStorage',
            fields=[
                ('storage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tantalus.Storage')),
                ('account', models.CharField(max_length=50, verbose_name='Storage Account')),
                ('container', models.CharField(max_length=50, verbose_name='Storage Container')),
            ],
            bases=('tantalus.storage',),
        ),
        migrations.CreateModel(
            name='BamFile',
            fields=[
                ('sequencefileresource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tantalus.SequenceFileResource')),
                ('reference_genome', models.CharField(choices=[('hg19', 'Human Genome 19'), ('hg18', 'Human Genome 18'), ('none', 'No Useful alignments')], max_length=50, verbose_name='Reference Genome')),
                ('aligner', models.CharField(max_length=50, verbose_name='Aligner')),
                ('lanes', models.ManyToManyField(to='tantalus.SequenceLane', verbose_name='Lanes')),
            ],
            bases=('tantalus.sequencefileresource',),
        ),
        migrations.CreateModel(
            name='FastqFile',
            fields=[
                ('sequencefileresource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tantalus.SequenceFileResource')),
                ('lanes', models.ManyToManyField(to='tantalus.SequenceLane', verbose_name='Lanes')),
            ],
            bases=('tantalus.sequencefileresource',),
        ),
        migrations.CreateModel(
            name='ServerBamFileInstance',
            fields=[
                ('serverfileinstance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tantalus.ServerFileInstance')),
                ('bam_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tantalus.BamFile')),
            ],
            bases=('tantalus.serverfileinstance',),
        ),
        migrations.CreateModel(
            name='ServerFastqFileInstance',
            fields=[
                ('serverfileinstance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tantalus.ServerFileInstance')),
                ('fastq_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tantalus.FastqFile')),
            ],
            bases=('tantalus.serverfileinstance',),
        ),
        migrations.CreateModel(
            name='ServerStorage',
            fields=[
                ('storage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tantalus.Storage')),
                ('server_name', models.CharField(max_length=50, verbose_name='Server Name')),
                ('directory', models.CharField(max_length=250, verbose_name='Store Directory')),
            ],
            bases=('tantalus.storage',),
        ),
        migrations.AddField(
            model_name='historicalserverstorage',
            name='storage_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.Storage'),
        ),
        migrations.AddField(
            model_name='historicalserverfastqfileinstance',
            name='serverfileinstance_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.ServerFileInstance'),
        ),
        migrations.AddField(
            model_name='historicalserverbamfileinstance',
            name='serverfileinstance_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.ServerFileInstance'),
        ),
        migrations.AddField(
            model_name='historicalfastqfile',
            name='sequencefileresource_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.SequenceFileResource'),
        ),
        migrations.AddField(
            model_name='historicalbamfile',
            name='sequencefileresource_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.SequenceFileResource'),
        ),
        migrations.AddField(
            model_name='historicalazureblobstorage',
            name='storage_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.Storage'),
        ),
        migrations.AddField(
            model_name='serverfileinstance',
            name='server_storage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tantalus.ServerStorage'),
        ),
        migrations.AddField(
            model_name='historicalserverfileinstance',
            name='server_storage',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.ServerStorage'),
        ),
        migrations.AddField(
            model_name='historicalserverfastqfileinstance',
            name='fastq_file',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.FastqFile'),
        ),
        migrations.AddField(
            model_name='historicalserverfastqfileinstance',
            name='server_storage',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.ServerStorage'),
        ),
        migrations.AddField(
            model_name='historicalserverbamfileinstance',
            name='bam_file',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.BamFile'),
        ),
        migrations.AddField(
            model_name='historicalserverbamfileinstance',
            name='server_storage',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.ServerStorage'),
        ),
    ]
