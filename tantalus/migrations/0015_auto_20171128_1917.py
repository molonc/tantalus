# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-11-28 19:17
from __future__ import unicode_literals

from django.db import migrations
import re


def get_lane(filename):
    g = re.match(".*[a-zA-Z0-9]+-A\\d+[a-zA-Z0-9]+-R\\d\\d?-C\\d\\d?_S\\d+_L00(\\d)_R[12]_001.fastq.gz$", filename)
    if g is None:
        raise Exception("Lane number not found")
    return g.group(1)


def lane_number_fixup(apps, schema_editor):
    PairedEndFastqFiles = apps.get_model('tantalus', 'PairedEndFastqFiles')
    SequenceLane = apps.get_model('tantalus', 'SequenceLane')

    for fastq in PairedEndFastqFiles.objects.filter(lanes__lane_number=''):
        lane_number = get_lane(fastq.reads_1_file.filename)
        lane_number_2 = get_lane(fastq.reads_2_file.filename)

        if lane_number != lane_number_2:
            raise Exception('lane numbers did not match')

        if fastq.lanes.count() != 1:
            raise Exception('expected 1 lane per fastq')

        sequence_lane = fastq.lanes.all()[0]

        if sequence_lane.lane_number != lane_number:
            fastq.lanes.remove(sequence_lane)

            new_sequence_lane, created = SequenceLane.objects.get_or_create(
                flowcell_id=sequence_lane.flowcell_id,
                lane_number=lane_number,
                sequencing_centre=sequence_lane.sequencing_centre,
                sequencing_library_id=sequence_lane.sequencing_library_id,
                sequencing_instrument=sequence_lane.sequencing_instrument,
                read_type=sequence_lane.read_type,
                dna_library=sequence_lane.dna_library)

            if created:
                new_sequence_lane.save()

            fastq.lanes.add(new_sequence_lane)
            fastq.save()

    for sequence_lane in SequenceLane.objects.all():
        if sequence_lane.abstractdataset_set.count() == 0:
            sequence_lane.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('tantalus', '0014_auto_20171117_2315'),
    ]

    operations = [
        migrations.RunPython(lane_number_fixup),
    ]
