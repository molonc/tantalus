# -*- coding: utf-8 -*-
# Generated by Django 1.11.14 on 2019-01-30 00:19
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models

from django.db import migrations, models

def migrate_m2m(apps, schema_editor):
    SequenceDataset = apps.get_model('tantalus', 'SequenceDataset')
    ResultsDataset = apps.get_model('tantalus', 'ResultsDataset')
    Analysis = apps.get_model('tantalus', 'Analysis')

    for analysis in Analysis.objects.all():
        analysis.temp_sequence.set(analysis.input_datasets.all())
        analysis.temp_result.set(analysis.input_results.all())
        analysis.input_datasets.clear()
        analysis.input_results.clear()
        analysis.save()


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tantalus', '0103_auto_20190123_2338'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('dataset_class', models.CharField(choices=[('Sequence', 'Sequence'), ('Results', 'Results')], max_length=50, null=True)),
                ('previous_dataset_id', models.IntegerField(null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='When the dataset was last updated.')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('dataset_type', models.CharField(choices=[('BAM', 'BAM Files'), ('FQ', 'FastQ Files')], default='BAM', max_length=50)),
                ('results_type', models.CharField(max_length=50)),
                ('results_version', models.CharField(max_length=50, null=True)),
                ('aligner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tantalus.AlignmentTool')),
                ('analysis', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tantalus.Analysis')),
                ('file_resources', models.ManyToManyField(to='tantalus.FileResource')),
                ('libraries', models.ManyToManyField(blank=True, to='tantalus.DNALibrary')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('reference_genome', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tantalus.ReferenceGenome')),
                ('samples', models.ManyToManyField(blank=True, to='tantalus.Sample')),
                ('sequence_lanes', models.ManyToManyField(to='tantalus.SequencingLane')),
                ('tags', models.ManyToManyField(blank=True, to='tantalus.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalDataset',
            fields=[
                ('id', models.IntegerField(db_index=True)),
                ('last_updated', models.DateTimeField(blank=True, editable=False, help_text='When the dataset was last updated.')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('dataset_type', models.CharField(choices=[('BAM', 'BAM Files'), ('FQ', 'FastQ Files')], default='BAM', max_length=50)),
                ('results_type', models.CharField(max_length=50)),
                ('results_version', models.CharField(max_length=50, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('aligner', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.AlignmentTool')),
                ('analysis', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.Analysis')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reference_genome', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.ReferenceGenome')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical dataset',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AlterField(
            model_name='resultsdataset',
            name='libraries',
            field=models.ManyToManyField(blank=True, to='tantalus.DNALibrary'),
        ),
        migrations.AlterField(
            model_name='resultsdataset',
            name='samples',
            field=models.ManyToManyField(blank=True, to='tantalus.Sample'),
        ),
        migrations.AddField(
            model_name='analysis',
            name='temp_sequence',
            field=models.ManyToManyField(blank=True, to='tantalus.SequenceDataset'),
        ),
        migrations.AddField(
            model_name='analysis',
            name='temp_result',
            field=models.ManyToManyField(blank=True, to='tantalus.ResultsDataset'),
        ),
        migrations.RunPython(migrate_m2m),
    ]
