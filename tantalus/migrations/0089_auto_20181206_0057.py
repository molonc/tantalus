# -*- coding: utf-8 -*-
# Generated by Django 1.11.14 on 2018-11-30 23:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
from django.conf import settings

#jira TANTA-99

#original data does not restored after rollback of the migration
#to fix it for the debugging run at the beginning
#create table rg as (select id, library_type val from tantalus_sequencedataset);
#
#after rollback run
#update tantalus_sequencedataset
#        set reference_genome=t.val
#    from rg t
#    where tantalus_sequencedataset.id=t.id;


def data_migrate(apps, schema_editor):
    seqds = apps.get_model('tantalus','SequenceDataset')
    vocab = apps.get_model('tantalus','ReferenceGenome')

    recs = seqds.objects.values_list('xxtmp',flat=True).distinct()

    print("\n\n%s;\n  N=%i;\n" % (str(recs.query),recs.count()))

    #fill vocabulary, ignore existing values
    for x in recs:
        if (x):
            print(x)
            vocab.objects.get_or_create(reference_genome=x)

    recs = seqds.objects.all()

    #save values in the temporary field
    print("\n\n%s;\n  N=%i;\n" % (str(recs.query),recs.count()))
    for r in recs:
        try:
            v = vocab.objects.get(reference_genome=r.xxtmp)
            r.reference_genome=v
            if (0 == (r.id % 113)):
                print("----- %s; %s;" % (r.id,r.reference_genome.id))
            r.save()
        except ObjectDoesNotExist:
            pass

#empty function, required to rollback migration
def do0(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        #('tantalus', '0088_historicalreferencegenome_referencegenome'),
        ('tantalus', '0087_auto_20181206_0054'),
    ]

    # -- rename "reference_genome" to "xxtmp"
    # -- create FK "reference_genome" (vocabulary)
    # -- fill vocabulary with unique values from "reference_genome"
    # -- set "reference_genome" FK to values based on "xxtmp" and vocabulary
    # -- remove "xxtmp"
    operations = [
        #migrations.CreateModel(
        #    name='ReferenceGenome',
        #    fields=[('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #            ('name', models.CharField(max_length=50, blank=True, null=False, unique=True)), ]),

        migrations.CreateModel(
            name='HistoricalReferenceGenome',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('reference_genome', models.CharField(db_index=True, max_length=50, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical reference genome',
            },
        ),
        migrations.CreateModel(
            name='ReferenceGenome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_genome', models.CharField(max_length=50, null=True, unique=True)),
            ],
        ),

        migrations.RenameField(
            model_name='sequencedataset',
            old_name = 'reference_genome',
            new_name = 'xxtmp'
        ),
        migrations.AddField(
            model_name='SequenceDataset',
            name='reference_genome',
            field=models.ForeignKey(null=True,on_delete=django.db.models.deletion.CASCADE,
                                    to='tantalus.ReferenceGenome'),
        ),
        migrations.RunPython(data_migrate,do0),
        migrations.RemoveField(
            model_name='sequencedataset',
            name='xxtmp'
        ),
    ]
