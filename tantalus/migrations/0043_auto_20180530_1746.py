# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-05-30 17:46
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tantalus', '0042_auto_20180530_1704'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalProject',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical project',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=120, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.CharField(max_length=255, null=True)),
                ('submitted_by', models.CharField(max_length=50)),
                ('lanes_sequenced', models.IntegerField(blank=True, null=True)),
                ('updated_goal', models.IntegerField(blank=True, null=True)),
                ('payment', models.CharField(blank=True, max_length=50)),
                ('data_path', models.CharField(blank=True, default=None, max_length=240, null=True)),
                ('library_type', models.CharField(blank=True, default=None, max_length=240, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='historicalsample',
            name='collab_sample_id',
            field=models.CharField(blank=True, max_length=240, null=True),
        ),
        migrations.AddField(
            model_name='historicalsample',
            name='note',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalsample',
            name='tissue',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='sample',
            name='collab_sample_id',
            field=models.CharField(blank=True, max_length=240, null=True),
        ),
        migrations.AddField(
            model_name='sample',
            name='note',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='sample',
            name='tissue',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='dnalibrary',
            name='library_type',
            field=models.CharField(choices=[('EXOME', 'Bulk Whole Exome Sequence'), ('WGS', 'Bulk Whole Genome Sequence'), ('RNASEQ', 'Bulk RNA-Seq'), ('SC_WGS', 'Single Cell Whole Genome Sequence'), ('SC_RNASEQ', 'Single Cell RNA-Seq'), ('EXCAP', 'Exon Capture'), ('MIRNA', 'micro RNA'), ('BISULFITE', 'Bisulfite'), ('CHIP', 'Chromatin Immunoprecipitation'), ('MRE', 'Methylation sensitive restriction enzyme sequencing'), ('MEDIP', 'Methylated DNA immunoprecipitation'), ('DNA_AMPLICON', 'Targetted DNA Amplicon Sequence')], max_length=50),
        ),
        migrations.AlterField(
            model_name='historicaldnalibrary',
            name='library_type',
            field=models.CharField(choices=[('EXOME', 'Bulk Whole Exome Sequence'), ('WGS', 'Bulk Whole Genome Sequence'), ('RNASEQ', 'Bulk RNA-Seq'), ('SC_WGS', 'Single Cell Whole Genome Sequence'), ('SC_RNASEQ', 'Single Cell RNA-Seq'), ('EXCAP', 'Exon Capture'), ('MIRNA', 'micro RNA'), ('BISULFITE', 'Bisulfite'), ('CHIP', 'Chromatin Immunoprecipitation'), ('MRE', 'Methylation sensitive restriction enzyme sequencing'), ('MEDIP', 'Methylated DNA immunoprecipitation'), ('DNA_AMPLICON', 'Targetted DNA Amplicon Sequence')], max_length=50),
        ),
        migrations.AddField(
            model_name='submission',
            name='sample',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tantalus.Sample'),
        ),
        migrations.AddField(
            model_name='submission',
            name='sow',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tantalus.Sow'),
        ),
        migrations.AddField(
            model_name='historicalsample',
            name='patient_id',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tantalus.Patient'),
        ),
        migrations.AddField(
            model_name='sample',
            name='patient_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tantalus.Patient'),
        ),
        migrations.AddField(
            model_name='sample',
            name='projects',
            field=models.ManyToManyField(to='tantalus.Project'),
        ),
    ]
